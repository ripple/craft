(module
  ;; Import the host function with its signature.
  (import "host_lib" "compute_sha512_half"
    (func $compute_sha512_half (param i32 i32 i32 i32) (result i32)))

  ;; Define a memory region large enough for our data.
  (memory (export "mem") 1)

  ;; Initialize the 'test_data' and 'hash_output' arrays.
  (data (i32.const
  (data (i32.const 1024) "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")

  (func (export "finish") (result i32)
    (local $count i32)
    (local $dummy_result i32)

    ;; Set the loop count to 10,000
    (local.set $count (i32.const 100000))

    (loop $my_loop
      ;; Push the arguments for the host function call
      (i32.const 0)
      (i32.const 1024)
      (i32.const 1024)
      (i32.const 32)

      (call $compute_sha512_half)

      (local.set $dummy_result)

      ;; Decrement the counter
      (local.get $count)
      (i32.const 1)
      (i32.sub)
      (local.set $count)

      (local.get $count)
      (i32.const 0)
      (i32.ne)
      (br_if $my_loop)
    )
    (local.get $dummy_result)
  )
)