name: Test

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

# Make sure CI fails on all warnings, including Clippy lints
env:
  RUSTFLAGS: "-Dwarnings"

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
      - name: Run pre-commit checks
        run: cargo pre-commit-check

  clippy_linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Cache dependencies
        uses: actions/cache/restore@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install wasm32 target
        run: rustup target add wasm32-unknown-unknown

      - name: Run Clippy (All Targets)
        run: cargo clippy-all

      - name: Check WASM contract exports
        run: cargo wasm-exports-check

  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Run fmt check
        run: cargo fmt-check

  # Note: This job should not be "required" for PRs, as during development there may be temporary
  # discrepancies between craft and rippled
  host_function_audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Audit host functions to ensure they match the XRPLd host functions
        run: cargo host-functions-audit

  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Add target
        run: rustup target add wasm32-unknown-unknown

      - name: Build & Test All Projects
        run: cargo build-all

      - name: Run Tests
        run: cargo test-all

  run-markdown:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Run code in Markdown files
        run: cargo markdown-test

  e2e-tests:
    runs-on: ubuntu-latest
    # needs: build_and_test
    steps:
      - uses: actions/checkout@v5

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Add target
        run: rustup target add wasm32-unknown-unknown

      - name: Run E2E tests
        run: cargo e2e-test
